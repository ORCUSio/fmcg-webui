{
    "Section 1: Welcome, Welcome, Welcome!": [
        "1. Course Structure and Projects",
        "2. Read Before You Start!",
        "3. Watch Before You Start!",
        "4. Setting Up Our Code Editor"
    ],
    "Section 2: JavaScript Fundamentals – Part 1": [
        "5. Section Intro",
        "6. Hello World!",
        "7. A Brief Introduction to JavaScript",
        "8. Linking a JavaScript File",
        "9. Values and Variables",
        "10. Practice Assignments",
        "11. Data Types",
        "12. let, const and var",
        "13. Basic Operators",
        "14. Operator Precedence",
        "15. A Note About Challenges",
        "Coding Exercise 1: CHALLENGE #1",
        "16. CHALLENGE #1: Video Solution",
        "17. Strings and Template Literals",
        "18. Taking Decisions: if / else Statements",
        "Coding Exercise 2: CHALLENGE #2",
        "19. CHALLENGE #2: Video Solution",
        "20. Type Conversion and Coercion",
        "21. Truthy and Falsy Values",
        "22. Equality Operators: == vs. ===",
        "23. Boolean Logic",
        "24. Logical Operators",
        "Coding Exercise 3: CHALLENGE #3",
        "25. CHALLENGE #3: Video Solution",
        "26. The switch Statement",
        "27. Statements and Expressions",
        "28. The Conditional (Ternary) Operator",
        "Coding Exercise 4: CHALLENGE #4",
        "29. CHALLENGE #4: Video Solution",
        "30. JavaScript Releases: ES5, ES6+ and ESNext"
    ],
    "Section 3: JavaScript Fundamentals – Part 2": [
        "31. Section Intro",
        "32. Activating Strict Mode",
        "33. Functions",
        "34. Function Declarations vs. Expressions",
        "xxxx 35. Arrow Functions",
        "36. Functions Calling Other Functions",
        "37. Reviewing Functions",
        "Coding Exercise 5: CHALLENGE #1",
        "38. CHALLENGE #1: Video Solution",
        "39. Introduction to Arrays",
        "40. Basic Array Operations (Methods)",
        "Coding Exercise 6: CHALLENGE #2",
        "41. CHALLENGE #2: Video Solution",
        "42. Introduction to Objects",
        "43. Dot vs. Bracket Notation",
        "44. Object Methods",
        "Coding Exercise 7: CHALLENGE #3",
        "45. CHALLENGE #3: Video Solution",
        "46. Iteration: The for Loop",
        "47. Looping Arrays, Breaking and Continuing",
        "48. Looping Backwards and Loops in Loops",
        "49. The while Loop",
        "Coding Exercise 8: CHALLENGE #4",
        "50. CHALLENGE #4: Video Solution"
    ],
    "Section 4: How to Navigate This Course": [
        "51. Pathways and Section Roadmaps",
        "52. Course Pathways"
    ],
    "Section 5: Developer Skills & Editor Setup": [
        "53. Section Intro",
        "54. Section Roadmap",
        "55. Setting up Prettier and VS Code",
        "56. Installing Node.js and Setting Up a Dev Environment",
        "57. Learning How to Code",
        "58. How to Think Like a Developer: Become a Problem Solver!",
        "59. Using Google, StackOverflow and MDN",
        "60. Debugging (Fixing Errors)",
        "61. Debugging with the Console and Breakpoints",
        "62. Coding Challenge #1"
    ],
    "Section 6: [OPTIONAL] HTML & CSS Crash Course": [
        "63. Section Intro",
        "64. Basic HTML Structure and Elements",
        "65. Attributes, Classes and IDs",
        "66. Basic Styling with CSS",
        "67. Introduction to the CSS Box Model"
    ],
    "Section 7: JavaScript in the Browser: DOM and Events Fundamentals": [
        "68. Section Intro",
        "69. Section Roadmap",
        "70. PROJECT #1: Guess My Number!",
        "71. What's the DOM and DOM Manipulation",
        "72. Selecting and Manipulating Elements",
        "73. Handling Click Events",
        "74. Implementing the Game Logic",
        "75. Manipulating CSS Styles",
        "76. Coding Challenge #1",
        "77. Implementing Highscores",
        "78. Refactoring Our Code: The DRY Principle",
        "79. PROJECT #2: Modal Window",
        "80. Working With Classes",
        "81. Handling an \"Esc\" Keypress Event",
        "82. PROJECT #3: Pig Game",
        "83. Rolling the Dice",
        "84. Switching the Active Player",
        "85. Holding Current Score",
        "86. Resetting the Game"
    ],
    "Section 8: How JavaScript Works Behind the Scenes": [
        "87. Section Intro",
        "88. Section Roadmap",
        "89. An High-Level Overview of JavaScript",
        "90. The JavaScript Engine and Runtime",
        "91. Execution Contexts and The Call Stack",
        "92. Scope and The Scope Chain",
        "93. Scoping in Practice",
        "94. Variable Environment: Hoisting and The TDZ",
        "95. Hoisting and TDZ in Practice",
        "96. The this Keyword",
        "97. The this Keyword in Practice",
        "98. Regular Functions vs. Arrow Functions",
        "99. Primitives vs. Objects (Primitive vs. Reference Types)",
        "100. Primitives vs. Objects in Practice"
    ],
    "Section 9: Data Structures, Modern Operators and Strings": [
        "101. Section Intro",
        "102. Section Roadmap",
        "103. Destructuring Arrays",
        "104. Practice Assignments",
        "105. Destructuring Objects",
        "106. The Spread Operator (...)",
        "107. Rest Pattern and Parameters",
        "108. Short Circuiting (&& and ||)",
        "109. The Nullish Coalescing Operator (??)",
        "110. Logical Assignment Operators",
        "111. Coding Challenge #1",
        "112. Looping Arrays: The for-of Loop",
        "113. Enhanced Object Literals",
        "114. Optional Chaining (?.)",
        "115. Looping Objects: Object Keys, Values, and Entries",
        "116. Coding Challenge #2",
        "117. Sets",
        "118. Maps: Fundamentals",
        "119. Maps: Iteration",
        "120. Summary: Which Data Structure to Use?",
        "121. Coding Challenge #3",
        "122. Working With Strings - Part 1",
        "123. Working With Strings - Part 2",
        "124. Working With Strings - Part 3",
        "125. Coding Challenge #4",
        "126. String Methods Practice"
    ],
    "Section 10: A Closer Look at Functions": [
        "127. Section Intro",
        "128. Section Roadmap",
        "129. Default Parameters",
        "130. How Passing Arguments Works: Value vs. Reference",
        "131. First-Class and Higher-Order Functions",
        "132. Functions Accepting Callback Functions",
        "133. Functions Returning Functions",
        "134. The call and apply Methods",
        "135. The bind Method",
        "136. Coding Challenge #1",
        "137. Immediately Invoked Function Expressions (IIFE)",
        "138. Closures",
        "139. More Closure Examples",
        "140. Coding Challenge #2"
    ],
    "Section 11: Working With Arrays": [
        "141. Section Intro",
        "142. Section Roadmap",
        "143. Simple Array Methods",
        "144. The new at Method",
        "145. Looping Arrays: forEach",
        "146. forEach With Maps and Sets",
        "147. PROJECT: \"Bankist\" App",
        "148. Creating DOM Elements",
        "149. Coding Challenge #1",
        "150. Data Transformations: map, filter, reduce",
        "151. The map Method",
        "152. Computing Usernames",
        "153. The filter Method",
        "154. The reduce Method",
        "155. Coding Challenge #2",
        "156. The Magic of Chaining Methods",
        "157. Coding Challenge #3",
        "158. The find Method",
        "159. Implementing Login",
        "160. Implementing Transfers",
        "161. The findIndex Method",
        "162. some and every",
        "163. flat and flatMap",
        "164. Sorting Arrays",
        "165. More Ways of Creating and Filling Arrays",
        "166. Summary: Which Array Method to Use?",
        "167. Array Methods Practice",
        "168. Coding Challenge #4"
    ],
    "Section 12: Numbers, Dates, Intl and Timers": [
        "169. Section Intro",
        "170. Section Roadmap",
        "171. Converting and Checking Numbers",
        "172. Math and Rounding",
        "173. The Remainder Operator",
        "174. Numeric Separators",
        "175. Working with BigInt",
        "176. Creating Dates",
        "177. Adding Dates to \"Bankist\" App",
        "178. Operations With Dates",
        "179. Internationalizing Dates (Intl)",
        "180. Internationalizing Numbers (Intl)",
        "181. Timers: setTimeout and setInterval",
        "182. Implementing a Countdown Timer"
    ],
    "Section 13: Advanced DOM and Events": [
        "183. Section Intro",
        "184. Section Roadmap",
        "185. PROJECT: \"Bankist\" Website",
        "186. How the DOM Really Works",
        "187. Selecting, Creating, and Deleting Elements",
        "188. Styles, Attributes and Classes",
        "189. Implementing Smooth Scrolling",
        "190. Types of Events and Event Handlers",
        "191. Event Propagation: Bubbling and Capturing",
        "192. Event Propagation in Practice",
        "193. Event Delegation: Implementing Page Navigation",
        "194. DOM Traversing",
        "195. Building a Tabbed Component",
        "196. Passing Arguments to Event Handlers",
        "197. Implementing a Sticky Navigation: The Scroll Event",
        "198. A Better Way: The Intersection Observer API",
        "199. Revealing Elements on Scroll",
        "200. Lazy Loading Images",
        "201. Building a Slider Component: Part 1",
        "202. Building a Slider Component: Part 2",
        "203. Lifecycle DOM Events",
        "204. Efficient Script Loading: defer and async"
    ],
    "Section 14: Object-Oriented Programming (OOP) With JavaScript": [
        "205. Section Intro",
        "206. Section Roadmap",
        "207. What is Object-Oriented Programming?",
        "208. OOP in JavaScript",
        "209. Constructor Functions and the new Operator",
        "210. Prototypes",
        "211. Prototypal Inheritance and The Prototype Chain",
        "212. Prototypal Inheritance on Built-In Objects",
        "213. Coding Challenge #1",
        "214. ES6 Classes",
        "215. Setters and Getters",
        "216. Static Methods",
        "217. Object.create",
        "218. Coding Challenge #2",
        "219. Inheritance Between \"Classes\": Constructor Functions",
        "220. Coding Challenge #3",
        "221. Inheritance Between \"Classes\": ES6 Classes",
        "222. Inheritance Between \"Classes\": Object.create",
        "223. Another Class Example",
        "224. Encapsulation: Protected Properties and Methods",
        "225. Encapsulation: Private Class Fields and Methods",
        "226. Chaining Methods",
        "227. ES6 Classes Summary",
        "228. Coding Challenge #4"
    ],
    "Section 15: Mapty App: OOP, Geolocation, External Libraries, and More!": [
        "229. Section Intro",
        "230. Section Roadmap",
        "231. Project Overview",
        "232. How to Plan a Web Project",
        "233. Using the Geolocation API",
        "234. Displaying a Map Using Leaflet Library",
        "235. Displaying a Map Marker",
        "236. Rendering Workout Input Form",
        "237. Project Architecture",
        "238. Refactoring for Project Architecture",
        "239. Managing Workout Data: Creating Classes",
        "240. Creating a New Workout",
        "241. Rendering Workouts",
        "242. Move to Marker On Click",
        "243. Working with localStorage",
        "244. Final Considerations"
    ],
    "Section 16: Asynchronous JavaScript: Promises, Async/Await, and AJAX": [
        "245. Section Intro",
        "246. Section Roadmap",
        "247. Asynchronous JavaScript, AJAX and APIs",
        "248. IMPORTANT: API URL Change",
        "249. Our First AJAX Call: XMLHttpRequest",
        "250. [OPTIONAL] How the Web Works: Requests and Responses",
        "251. Welcome to Callback Hell",
        "252. Promises and the Fetch API",
        "253. Consuming Promises",
        "254. Chaining Promises",
        "255. Handling Rejected Promises",
        "256. Throwing Errors Manually",
        "257. Coding Challenge #1",
        "258. Asynchronous Behind the Scenes: The Event Loop",
        "259. The Event Loop in Practice",
        "260. Building a Simple Promise",
        "261. Promisifying the Geolocation API",
        "262. Coding Challenge #2",
        "263. Consuming Promises with Async/Await",
        "264. Error Handling With try...catch",
        "265. Returning Values from Async Functions",
        "266. Running Promises in Parallel",
        "267. Other Promise Combinators: race, allSettled and any",
        "268. Coding Challenge #3"
    ],
    "Section 17: Modern JavaScript Development: Modules, Tooling, and Functional": [
        "269. Section Intro",
        "270. Section Roadmap",
        "271. An Overview of Modern JavaScript Development",
        "272. An Overview of Modules in JavaScript",
        "273. Exporting and Importing in ES6 Modules",
        "274. Top-Level await (ES2022)",
        "275. The Module Pattern",
        "276. CommonJS Modules",
        "277. A Brief Introduction to the Command Line",
        "278. Introduction to NPM",
        "279. Bundling With Parcel and NPM Scripts",
        "280. Configuring Babel and Polyfilling",
        "281. Review: Writing Clean and Modern JavaScript",
        "282. Let's Fix Some Bad Code: Part 1",
        "283. Declarative and Functional JavaScript Principles",
        "284. Let's Fix Some Bad Code: Part 2"
    ],
    "Section 18: Forkify App: Building a Modern Application": [
        "285. Section Intro",
        "286. Section Roadmap",
        "287. Project Overview and Planning (I)",
        "288. Latest Code Updates (Parcel v2 and more)",
        "289. Loading a Recipe from API",
        "290. Rendering the Recipe",
        "291. Listening For load and hashchange Events",
        "292. The MVC Architecture",
        "293. Refactoring for MVC",
        "294. Helpers and Configuration Files",
        "295. Event Handlers in MVC: Publisher-Subscriber Pattern",
        "296. Implementing Error and Success Messages",
        "297. Implementing Search Results - Part 1",
        "298. Implementing Search Results - Part 2",
        "299. Implementing Pagination - Part 1",
        "300. Implementing Pagination - Part 2",
        "301. Project Planning II",
        "302. Updating Recipe Servings",
        "303. Developing a DOM Updating Algorithm",
        "304. Implementing Bookmarks - Part 1",
        "305. Implementing Bookmarks - Part 2",
        "306. Storing Bookmarks With localStorage",
        "307. Project Planning III",
        "308. Uploading a New Recipe - Part 1",
        "309. Uploading a New Recipe - Part 2",
        "310. Uploading a New Recipe - Part 3",
        "311. Wrapping Up: Final Considerations"
    ],
    "Section 19: Setting Up Git and Deployment": [
        "312. Section Intro",
        "313. Section Roadmap",
        "314. Simple Deployment With Netlify",
        "315. Setting Up Git and GitHub",
        "316. Git Fundamentals",
        "317. Pushing to GitHub",
        "318. Setting Up Continuous Integration With Netlify"
    ],
    "Section 20: The End!": [
        "319. Where to Go from Here",
        "320. My Other Courses + Updates"
    ],
    "Section 21: [LEGACY] Access the Old Course": [
        "321. Access the Old Course"
    ]
}